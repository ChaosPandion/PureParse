namespace rec PureParse.Test

open System
open System.Text
open PureParse
open Xunit
open PureParse.Examples
open System.Collections
open System.Collections.Generic

module ArithmeticTests = 
    begin
        
        [<Theory>]
        [<ClassData(typedefof<ArithmeticData>)>]
        let ``The result of the evaluation is correct.`` expression expect = 
            Assert.Equal(expect, Arithmetic.evalText expression,  4)

    type ArithmeticData() =
        interface IEnumerable with
            member this.GetEnumerator() = (this :> IEnumerable<array<obj>>).GetEnumerator() :> IEnumerator
        interface IEnumerable<array<obj>> with
            member this.GetEnumerator() = 
                ([
                    [| "1+1":>obj; (1.0 + 1.0):>obj |]   
                    [| " 1 + 1 ":>obj; (1.0 + 1.0):>obj |]  
                    [| " 1+1":>obj; (1.0 + 1.0):>obj |]   
                    [| "1+1 ":>obj; (1.0 + 1.0):>obj |]   
                    [| "1 + 1 ":>obj; (1.0 + 1.0):>obj |] 
                    [| "1 + 1":>obj; (1.0 + 1.0):>obj |] 
                    [| "1 - 1":>obj; (1.0 - 1.0):>obj |] 
                    [| "1 * 1":>obj; (1.0 * 1.0):>obj |] 
                    [| "1 / 1":>obj; (1.0 / 1.0):>obj |]  
                    [| "1 + -1":>obj; (1.0 + -1.0):>obj |] 
                    [| "1 - -1":>obj; (1.0 - -1.0):>obj |] 
                    [| "1 * -1":>obj; (1.0 * -1.0):>obj |] 
                    [| "1 / -1":>obj; (1.0 / -1.0):>obj |] 
                    [| "1 + (1 + 1)":>obj; (1.0 + (1.0 + 1.0)):>obj |]
                    [| "1 + (1 - 1)":>obj; (1.0 + (1.0 - 1.0)):>obj |]  
                    [| "1 + (1 * 1)":>obj; (1.0 + (1.0 * 1.0)):>obj |] 
                    [| "1 + (1 / 1)":>obj; (1.0 + (1.0 / 1.0)):>obj |]  
                    [| "1 + (1 + 1 * 2)":>obj; (1.0 + (1.0 + 1.0 * 2.0)):>obj |]
                    [| "1 + (1 - 1 / 2)":>obj; (1.0 + (1.0 - 1.0 / 2.0)):>obj |]  
                    [| "1 + (1 * 1 + 2)":>obj; (1.0 + (1.0 * 1.0 + 2.0)):>obj |] 
                    [| "1 + (1 / 1 - 2)":>obj; (1.0 + (1.0 / 1.0 - 2.0)):>obj |] 
                    [| "1 * (1 + 1)":>obj; (1.0 * (1.0 + 1.0)):>obj |]
                    [| "1 * (1 - 1)":>obj; (1.0 * (1.0 - 1.0)):>obj |]  
                    [| "1 * (1 * 1)":>obj; (1.0 * (1.0 * 1.0)):>obj |] 
                    [| "1 * (1 / 1)":>obj; (1.0 * (1.0 / 1.0)):>obj |]  
                    [| "1 * (1 + 1 * 2)":>obj; (1.0 * (1.0 + 1.0 * 2.0)):>obj |]
                    [| "1 * (1 - 1 / 2)":>obj; (1.0 * (1.0 - 1.0 / 2.0)):>obj |]  
                    [| "1 * (1 * 1 + 2)":>obj; (1.0 * (1.0 * 1.0 + 2.0)):>obj |] 
                    [| "1 * (1 / 1 - 2)":>obj; (1.0 * (1.0 / 1.0 - 2.0)):>obj |]  
                    [| "(1 + 2) * (2 / 4)":>obj; ((1.0 + 2.0) * (2.0 / 4.0)):>obj |]  
                    [| "(1 + 2) / (2 / 4)":>obj; ((1.0 + 2.0) / (2.0 / 4.0)):>obj |]  
                    [| "(1 + 2) / -(2 / 4)":>obj; ((1.0 + 2.0) / -(2.0 / 4.0)):>obj |]                         
                    
                    [| "1 + (2 * (2 * (2 * 2)))":>obj; (1.0 + (2.0 * (2.0 * (2.0 * 2.0)))):>obj |]
                    [| "1 + (2 * (2 * (2 * 2))) + 1":>obj; (1.0 + (2.0 * (2.0 * (2.0 * 2.0))) + 1.0):>obj |]
                    [| "2 * (2 * 2) * 2":>obj; (2.0 * (2.0 * 2.0) * 2.0):>obj |]
                 
                    [| "1 + 1 + (1000 * (1000 * (1000 * (1000 * (1000 * 20000 / 30000) / 30000) / 30000) / 30000) / 30000) + 2":>obj; (1.0 + 1.0 + (1000.0 * (1000.0 * (1000.0 * (1000.0 * (1000.0 * 20000.0 / 30000.0) / 30000.0) / 30000.0) / 30000.0) / 30000.0) + 2.0):>obj |]
                 
                    
                    [| "1.1+1.2":>obj; (1.1 + 1.2):>obj |] 
                    [| "1.111+1.222":>obj; (1.111 + 1.222):>obj |]
                    [| "1.111111+1.222222":>obj; (1.111111 + 1.222222):>obj |] 
                    [| "1.1-1.2":>obj; (1.1 - 1.2):>obj |] 
                    [| "1.111-1.222":>obj; (1.111 - 1.222):>obj |]
                    [| "1.111111-1.222222":>obj; (1.111111 - 1.222222):>obj |] 
                    [| "1.1*1.2":>obj; (1.1 * 1.2):>obj |] 
                    [| "1.111*1.222":>obj; (1.111 * 1.222):>obj |]
                    [| "1.111111*1.222222":>obj; (1.111111 * 1.222222):>obj |]  
                    [| "1.1/1.2":>obj; (1.1 / 1.2):>obj |] 
                    [| "1.111/1.222":>obj; (1.111 / 1.222):>obj |]
                    [| "1.111111/1.222222":>obj; (1.111111 / 1.222222):>obj |] 

                    [| "1.1e2+1.2e2":>obj; (1.1e2 + 1.2e2):>obj |] 
                    [| "1.111e2+1.222e2":>obj; (1.111e2 + 1.222e2):>obj |]
                    [| "1.111111e2+1.222222e2":>obj; (1.111111e2 + 1.222222e2):>obj |]
                    [| "1.1e2-1.2e2":>obj; (1.1e2 - 1.2e2):>obj |] 
                    [| "1.111e2-1.222e2":>obj; (1.111e2 - 1.222e2):>obj |]
                    [| "1.111111e2-1.222222e2":>obj; (1.111111e2 - 1.222222e2):>obj |]
                    [| "1.1e2*1.2e2":>obj; (1.1e2 * 1.2e2):>obj |] 
                    [| "1.111e2*1.222e2":>obj; (1.111e2 * 1.222e2):>obj |]
                    [| "1.111111e2*1.222222e2":>obj; (1.111111e2 * 1.222222e2):>obj |]
                    [| "1.1e2/1.2e2":>obj; (1.1e2 / 1.2e2):>obj |] 
                    [| "1.111e2/1.222e2":>obj; (1.111e2 / 1.222e2):>obj |]
                    [| "1.111111e2/1.222222e2":>obj; (1.111111e2 / 1.222222e2):>obj |]

                ] |> List.toSeq).GetEnumerator()
    end

